// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cache/cache.proto

package cache // import "./cache"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sdk_ws "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommonResp struct {
	ErrCode              int32    `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResp) Reset()         { *m = CommonResp{} }
func (m *CommonResp) String() string { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()    {}
func (*CommonResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{0}
}
func (m *CommonResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResp.Unmarshal(m, b)
}
func (m *CommonResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResp.Marshal(b, m, deterministic)
}
func (dst *CommonResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResp.Merge(dst, src)
}
func (m *CommonResp) XXX_Size() int {
	return xxx_messageInfo_CommonResp.Size(m)
}
func (m *CommonResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResp.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResp proto.InternalMessageInfo

func (m *CommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommonResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type GetUserInfoFromCacheReq struct {
	UserIDList           []string `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoFromCacheReq) Reset()         { *m = GetUserInfoFromCacheReq{} }
func (m *GetUserInfoFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoFromCacheReq) ProtoMessage()    {}
func (*GetUserInfoFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{1}
}
func (m *GetUserInfoFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoFromCacheReq.Unmarshal(m, b)
}
func (m *GetUserInfoFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetUserInfoFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoFromCacheReq.Merge(dst, src)
}
func (m *GetUserInfoFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoFromCacheReq.Size(m)
}
func (m *GetUserInfoFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoFromCacheReq proto.InternalMessageInfo

func (m *GetUserInfoFromCacheReq) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetUserInfoFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserInfoFromCacheResp struct {
	CommonResp           *CommonResp        `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	UserInfoList         []*sdk_ws.UserInfo `protobuf:"bytes,2,rep,name=userInfoList" json:"userInfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetUserInfoFromCacheResp) Reset()         { *m = GetUserInfoFromCacheResp{} }
func (m *GetUserInfoFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoFromCacheResp) ProtoMessage()    {}
func (*GetUserInfoFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{2}
}
func (m *GetUserInfoFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoFromCacheResp.Unmarshal(m, b)
}
func (m *GetUserInfoFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetUserInfoFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoFromCacheResp.Merge(dst, src)
}
func (m *GetUserInfoFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoFromCacheResp.Size(m)
}
func (m *GetUserInfoFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoFromCacheResp proto.InternalMessageInfo

func (m *GetUserInfoFromCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetUserInfoFromCacheResp) GetUserInfoList() []*sdk_ws.UserInfo {
	if m != nil {
		return m.UserInfoList
	}
	return nil
}

type UpdateUserInfoToCacheReq struct {
	UserInfoList         []*sdk_ws.UserInfo `protobuf:"bytes,1,rep,name=userInfoList" json:"userInfoList,omitempty"`
	OperationID          string             `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateUserInfoToCacheReq) Reset()         { *m = UpdateUserInfoToCacheReq{} }
func (m *UpdateUserInfoToCacheReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUserInfoToCacheReq) ProtoMessage()    {}
func (*UpdateUserInfoToCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{3}
}
func (m *UpdateUserInfoToCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserInfoToCacheReq.Unmarshal(m, b)
}
func (m *UpdateUserInfoToCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserInfoToCacheReq.Marshal(b, m, deterministic)
}
func (dst *UpdateUserInfoToCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserInfoToCacheReq.Merge(dst, src)
}
func (m *UpdateUserInfoToCacheReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUserInfoToCacheReq.Size(m)
}
func (m *UpdateUserInfoToCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserInfoToCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserInfoToCacheReq proto.InternalMessageInfo

func (m *UpdateUserInfoToCacheReq) GetUserInfoList() []*sdk_ws.UserInfo {
	if m != nil {
		return m.UserInfoList
	}
	return nil
}

func (m *UpdateUserInfoToCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type UpdateUserInfoToCacheResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateUserInfoToCacheResp) Reset()         { *m = UpdateUserInfoToCacheResp{} }
func (m *UpdateUserInfoToCacheResp) String() string { return proto.CompactTextString(m) }
func (*UpdateUserInfoToCacheResp) ProtoMessage()    {}
func (*UpdateUserInfoToCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{4}
}
func (m *UpdateUserInfoToCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserInfoToCacheResp.Unmarshal(m, b)
}
func (m *UpdateUserInfoToCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserInfoToCacheResp.Marshal(b, m, deterministic)
}
func (dst *UpdateUserInfoToCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserInfoToCacheResp.Merge(dst, src)
}
func (m *UpdateUserInfoToCacheResp) XXX_Size() int {
	return xxx_messageInfo_UpdateUserInfoToCacheResp.Size(m)
}
func (m *UpdateUserInfoToCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserInfoToCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserInfoToCacheResp proto.InternalMessageInfo

func (m *UpdateUserInfoToCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetFriendIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFriendIDListFromCacheReq) Reset()         { *m = GetFriendIDListFromCacheReq{} }
func (m *GetFriendIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDListFromCacheReq) ProtoMessage()    {}
func (*GetFriendIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{5}
}
func (m *GetFriendIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Unmarshal(m, b)
}
func (m *GetFriendIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDListFromCacheReq.Merge(dst, src)
}
func (m *GetFriendIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDListFromCacheReq.Size(m)
}
func (m *GetFriendIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDListFromCacheReq proto.InternalMessageInfo

func (m *GetFriendIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetFriendIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetFriendIDListFromCacheResp struct {
	UserIDList           []string    `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	CommonResp           *CommonResp `protobuf:"bytes,2,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetFriendIDListFromCacheResp) Reset()         { *m = GetFriendIDListFromCacheResp{} }
func (m *GetFriendIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetFriendIDListFromCacheResp) ProtoMessage()    {}
func (*GetFriendIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{6}
}
func (m *GetFriendIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Unmarshal(m, b)
}
func (m *GetFriendIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetFriendIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFriendIDListFromCacheResp.Merge(dst, src)
}
func (m *GetFriendIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetFriendIDListFromCacheResp.Size(m)
}
func (m *GetFriendIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFriendIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetFriendIDListFromCacheResp proto.InternalMessageInfo

func (m *GetFriendIDListFromCacheResp) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetFriendIDListFromCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type AddFriendToCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	FriendID             string   `protobuf:"bytes,2,opt,name=friendID" json:"friendID,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendToCacheReq) Reset()         { *m = AddFriendToCacheReq{} }
func (m *AddFriendToCacheReq) String() string { return proto.CompactTextString(m) }
func (*AddFriendToCacheReq) ProtoMessage()    {}
func (*AddFriendToCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{7}
}
func (m *AddFriendToCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendToCacheReq.Unmarshal(m, b)
}
func (m *AddFriendToCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendToCacheReq.Marshal(b, m, deterministic)
}
func (dst *AddFriendToCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendToCacheReq.Merge(dst, src)
}
func (m *AddFriendToCacheReq) XXX_Size() int {
	return xxx_messageInfo_AddFriendToCacheReq.Size(m)
}
func (m *AddFriendToCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendToCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendToCacheReq proto.InternalMessageInfo

func (m *AddFriendToCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddFriendToCacheReq) GetFriendID() string {
	if m != nil {
		return m.FriendID
	}
	return ""
}

func (m *AddFriendToCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type AddFriendToCacheResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddFriendToCacheResp) Reset()         { *m = AddFriendToCacheResp{} }
func (m *AddFriendToCacheResp) String() string { return proto.CompactTextString(m) }
func (*AddFriendToCacheResp) ProtoMessage()    {}
func (*AddFriendToCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{8}
}
func (m *AddFriendToCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendToCacheResp.Unmarshal(m, b)
}
func (m *AddFriendToCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendToCacheResp.Marshal(b, m, deterministic)
}
func (dst *AddFriendToCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendToCacheResp.Merge(dst, src)
}
func (m *AddFriendToCacheResp) XXX_Size() int {
	return xxx_messageInfo_AddFriendToCacheResp.Size(m)
}
func (m *AddFriendToCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendToCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendToCacheResp proto.InternalMessageInfo

func (m *AddFriendToCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type ReduceFriendFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	FriendID             string   `protobuf:"bytes,2,opt,name=friendID" json:"friendID,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReduceFriendFromCacheReq) Reset()         { *m = ReduceFriendFromCacheReq{} }
func (m *ReduceFriendFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*ReduceFriendFromCacheReq) ProtoMessage()    {}
func (*ReduceFriendFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{9}
}
func (m *ReduceFriendFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReduceFriendFromCacheReq.Unmarshal(m, b)
}
func (m *ReduceFriendFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReduceFriendFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *ReduceFriendFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReduceFriendFromCacheReq.Merge(dst, src)
}
func (m *ReduceFriendFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_ReduceFriendFromCacheReq.Size(m)
}
func (m *ReduceFriendFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReduceFriendFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReduceFriendFromCacheReq proto.InternalMessageInfo

func (m *ReduceFriendFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ReduceFriendFromCacheReq) GetFriendID() string {
	if m != nil {
		return m.FriendID
	}
	return ""
}

func (m *ReduceFriendFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type ReduceFriendFromCacheResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReduceFriendFromCacheResp) Reset()         { *m = ReduceFriendFromCacheResp{} }
func (m *ReduceFriendFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*ReduceFriendFromCacheResp) ProtoMessage()    {}
func (*ReduceFriendFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{10}
}
func (m *ReduceFriendFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReduceFriendFromCacheResp.Unmarshal(m, b)
}
func (m *ReduceFriendFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReduceFriendFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *ReduceFriendFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReduceFriendFromCacheResp.Merge(dst, src)
}
func (m *ReduceFriendFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_ReduceFriendFromCacheResp.Size(m)
}
func (m *ReduceFriendFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReduceFriendFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReduceFriendFromCacheResp proto.InternalMessageInfo

func (m *ReduceFriendFromCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetBlackIDListFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID          string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlackIDListFromCacheReq) Reset()         { *m = GetBlackIDListFromCacheReq{} }
func (m *GetBlackIDListFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetBlackIDListFromCacheReq) ProtoMessage()    {}
func (*GetBlackIDListFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{11}
}
func (m *GetBlackIDListFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Unmarshal(m, b)
}
func (m *GetBlackIDListFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *GetBlackIDListFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlackIDListFromCacheReq.Merge(dst, src)
}
func (m *GetBlackIDListFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetBlackIDListFromCacheReq.Size(m)
}
func (m *GetBlackIDListFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlackIDListFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlackIDListFromCacheReq proto.InternalMessageInfo

func (m *GetBlackIDListFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetBlackIDListFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetBlackIDListFromCacheResp struct {
	UserIDList           []string    `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	CommonResp           *CommonResp `protobuf:"bytes,2,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetBlackIDListFromCacheResp) Reset()         { *m = GetBlackIDListFromCacheResp{} }
func (m *GetBlackIDListFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*GetBlackIDListFromCacheResp) ProtoMessage()    {}
func (*GetBlackIDListFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{12}
}
func (m *GetBlackIDListFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Unmarshal(m, b)
}
func (m *GetBlackIDListFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *GetBlackIDListFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlackIDListFromCacheResp.Merge(dst, src)
}
func (m *GetBlackIDListFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_GetBlackIDListFromCacheResp.Size(m)
}
func (m *GetBlackIDListFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlackIDListFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlackIDListFromCacheResp proto.InternalMessageInfo

func (m *GetBlackIDListFromCacheResp) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetBlackIDListFromCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type AddBlackUserToCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlackUserToCacheReq) Reset()         { *m = AddBlackUserToCacheReq{} }
func (m *AddBlackUserToCacheReq) String() string { return proto.CompactTextString(m) }
func (*AddBlackUserToCacheReq) ProtoMessage()    {}
func (*AddBlackUserToCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{13}
}
func (m *AddBlackUserToCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackUserToCacheReq.Unmarshal(m, b)
}
func (m *AddBlackUserToCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackUserToCacheReq.Marshal(b, m, deterministic)
}
func (dst *AddBlackUserToCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackUserToCacheReq.Merge(dst, src)
}
func (m *AddBlackUserToCacheReq) XXX_Size() int {
	return xxx_messageInfo_AddBlackUserToCacheReq.Size(m)
}
func (m *AddBlackUserToCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackUserToCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackUserToCacheReq proto.InternalMessageInfo

func (m *AddBlackUserToCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *AddBlackUserToCacheReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

func (m *AddBlackUserToCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type AddBlackUserToCacheResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddBlackUserToCacheResp) Reset()         { *m = AddBlackUserToCacheResp{} }
func (m *AddBlackUserToCacheResp) String() string { return proto.CompactTextString(m) }
func (*AddBlackUserToCacheResp) ProtoMessage()    {}
func (*AddBlackUserToCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{14}
}
func (m *AddBlackUserToCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlackUserToCacheResp.Unmarshal(m, b)
}
func (m *AddBlackUserToCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlackUserToCacheResp.Marshal(b, m, deterministic)
}
func (dst *AddBlackUserToCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlackUserToCacheResp.Merge(dst, src)
}
func (m *AddBlackUserToCacheResp) XXX_Size() int {
	return xxx_messageInfo_AddBlackUserToCacheResp.Size(m)
}
func (m *AddBlackUserToCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlackUserToCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlackUserToCacheResp proto.InternalMessageInfo

func (m *AddBlackUserToCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type ReduceBlackUserFromCacheReq struct {
	UserID               string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	BlackUserID          string   `protobuf:"bytes,2,opt,name=blackUserID" json:"blackUserID,omitempty"`
	OperationID          string   `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReduceBlackUserFromCacheReq) Reset()         { *m = ReduceBlackUserFromCacheReq{} }
func (m *ReduceBlackUserFromCacheReq) String() string { return proto.CompactTextString(m) }
func (*ReduceBlackUserFromCacheReq) ProtoMessage()    {}
func (*ReduceBlackUserFromCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{15}
}
func (m *ReduceBlackUserFromCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReduceBlackUserFromCacheReq.Unmarshal(m, b)
}
func (m *ReduceBlackUserFromCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReduceBlackUserFromCacheReq.Marshal(b, m, deterministic)
}
func (dst *ReduceBlackUserFromCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReduceBlackUserFromCacheReq.Merge(dst, src)
}
func (m *ReduceBlackUserFromCacheReq) XXX_Size() int {
	return xxx_messageInfo_ReduceBlackUserFromCacheReq.Size(m)
}
func (m *ReduceBlackUserFromCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReduceBlackUserFromCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReduceBlackUserFromCacheReq proto.InternalMessageInfo

func (m *ReduceBlackUserFromCacheReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ReduceBlackUserFromCacheReq) GetBlackUserID() string {
	if m != nil {
		return m.BlackUserID
	}
	return ""
}

func (m *ReduceBlackUserFromCacheReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type ReduceBlackUserFromCacheResp struct {
	CommonResp           *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReduceBlackUserFromCacheResp) Reset()         { *m = ReduceBlackUserFromCacheResp{} }
func (m *ReduceBlackUserFromCacheResp) String() string { return proto.CompactTextString(m) }
func (*ReduceBlackUserFromCacheResp) ProtoMessage()    {}
func (*ReduceBlackUserFromCacheResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cache_d0822f7e413e82c3, []int{16}
}
func (m *ReduceBlackUserFromCacheResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReduceBlackUserFromCacheResp.Unmarshal(m, b)
}
func (m *ReduceBlackUserFromCacheResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReduceBlackUserFromCacheResp.Marshal(b, m, deterministic)
}
func (dst *ReduceBlackUserFromCacheResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReduceBlackUserFromCacheResp.Merge(dst, src)
}
func (m *ReduceBlackUserFromCacheResp) XXX_Size() int {
	return xxx_messageInfo_ReduceBlackUserFromCacheResp.Size(m)
}
func (m *ReduceBlackUserFromCacheResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ReduceBlackUserFromCacheResp.DiscardUnknown(m)
}

var xxx_messageInfo_ReduceBlackUserFromCacheResp proto.InternalMessageInfo

func (m *ReduceBlackUserFromCacheResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "cache.CommonResp")
	proto.RegisterType((*GetUserInfoFromCacheReq)(nil), "cache.GetUserInfoFromCacheReq")
	proto.RegisterType((*GetUserInfoFromCacheResp)(nil), "cache.GetUserInfoFromCacheResp")
	proto.RegisterType((*UpdateUserInfoToCacheReq)(nil), "cache.UpdateUserInfoToCacheReq")
	proto.RegisterType((*UpdateUserInfoToCacheResp)(nil), "cache.UpdateUserInfoToCacheResp")
	proto.RegisterType((*GetFriendIDListFromCacheReq)(nil), "cache.GetFriendIDListFromCacheReq")
	proto.RegisterType((*GetFriendIDListFromCacheResp)(nil), "cache.GetFriendIDListFromCacheResp")
	proto.RegisterType((*AddFriendToCacheReq)(nil), "cache.AddFriendToCacheReq")
	proto.RegisterType((*AddFriendToCacheResp)(nil), "cache.AddFriendToCacheResp")
	proto.RegisterType((*ReduceFriendFromCacheReq)(nil), "cache.ReduceFriendFromCacheReq")
	proto.RegisterType((*ReduceFriendFromCacheResp)(nil), "cache.ReduceFriendFromCacheResp")
	proto.RegisterType((*GetBlackIDListFromCacheReq)(nil), "cache.GetBlackIDListFromCacheReq")
	proto.RegisterType((*GetBlackIDListFromCacheResp)(nil), "cache.GetBlackIDListFromCacheResp")
	proto.RegisterType((*AddBlackUserToCacheReq)(nil), "cache.AddBlackUserToCacheReq")
	proto.RegisterType((*AddBlackUserToCacheResp)(nil), "cache.AddBlackUserToCacheResp")
	proto.RegisterType((*ReduceBlackUserFromCacheReq)(nil), "cache.ReduceBlackUserFromCacheReq")
	proto.RegisterType((*ReduceBlackUserFromCacheResp)(nil), "cache.ReduceBlackUserFromCacheResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cache service

type CacheClient interface {
	// userInfo
	GetUserInfoFromCache(ctx context.Context, in *GetUserInfoFromCacheReq, opts ...grpc.CallOption) (*GetUserInfoFromCacheResp, error)
	UpdateUserInfoToCache(ctx context.Context, in *UpdateUserInfoToCacheReq, opts ...grpc.CallOption) (*UpdateUserInfoToCacheResp, error)
	// friendInfo
	GetFriendIDListFromCache(ctx context.Context, in *GetFriendIDListFromCacheReq, opts ...grpc.CallOption) (*GetFriendIDListFromCacheResp, error)
	AddFriendToCache(ctx context.Context, in *AddFriendToCacheReq, opts ...grpc.CallOption) (*AddFriendToCacheResp, error)
	ReduceFriendFromCache(ctx context.Context, in *ReduceFriendFromCacheReq, opts ...grpc.CallOption) (*ReduceFriendFromCacheResp, error)
	// blackList
	GetBlackIDListFromCache(ctx context.Context, in *GetBlackIDListFromCacheReq, opts ...grpc.CallOption) (*GetBlackIDListFromCacheResp, error)
	AddBlackUserToCache(ctx context.Context, in *AddBlackUserToCacheReq, opts ...grpc.CallOption) (*AddBlackUserToCacheResp, error)
	ReduceBlackUserFromCache(ctx context.Context, in *ReduceBlackUserFromCacheReq, opts ...grpc.CallOption) (*ReduceBlackUserFromCacheResp, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) GetUserInfoFromCache(ctx context.Context, in *GetUserInfoFromCacheReq, opts ...grpc.CallOption) (*GetUserInfoFromCacheResp, error) {
	out := new(GetUserInfoFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetUserInfoFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) UpdateUserInfoToCache(ctx context.Context, in *UpdateUserInfoToCacheReq, opts ...grpc.CallOption) (*UpdateUserInfoToCacheResp, error) {
	out := new(UpdateUserInfoToCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/UpdateUserInfoToCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) GetFriendIDListFromCache(ctx context.Context, in *GetFriendIDListFromCacheReq, opts ...grpc.CallOption) (*GetFriendIDListFromCacheResp, error) {
	out := new(GetFriendIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetFriendIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) AddFriendToCache(ctx context.Context, in *AddFriendToCacheReq, opts ...grpc.CallOption) (*AddFriendToCacheResp, error) {
	out := new(AddFriendToCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/AddFriendToCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) ReduceFriendFromCache(ctx context.Context, in *ReduceFriendFromCacheReq, opts ...grpc.CallOption) (*ReduceFriendFromCacheResp, error) {
	out := new(ReduceFriendFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/ReduceFriendFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) GetBlackIDListFromCache(ctx context.Context, in *GetBlackIDListFromCacheReq, opts ...grpc.CallOption) (*GetBlackIDListFromCacheResp, error) {
	out := new(GetBlackIDListFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/GetBlackIDListFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) AddBlackUserToCache(ctx context.Context, in *AddBlackUserToCacheReq, opts ...grpc.CallOption) (*AddBlackUserToCacheResp, error) {
	out := new(AddBlackUserToCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/AddBlackUserToCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cacheClient) ReduceBlackUserFromCache(ctx context.Context, in *ReduceBlackUserFromCacheReq, opts ...grpc.CallOption) (*ReduceBlackUserFromCacheResp, error) {
	out := new(ReduceBlackUserFromCacheResp)
	err := grpc.Invoke(ctx, "/cache.cache/ReduceBlackUserFromCache", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cache service

type CacheServer interface {
	// userInfo
	GetUserInfoFromCache(context.Context, *GetUserInfoFromCacheReq) (*GetUserInfoFromCacheResp, error)
	UpdateUserInfoToCache(context.Context, *UpdateUserInfoToCacheReq) (*UpdateUserInfoToCacheResp, error)
	// friendInfo
	GetFriendIDListFromCache(context.Context, *GetFriendIDListFromCacheReq) (*GetFriendIDListFromCacheResp, error)
	AddFriendToCache(context.Context, *AddFriendToCacheReq) (*AddFriendToCacheResp, error)
	ReduceFriendFromCache(context.Context, *ReduceFriendFromCacheReq) (*ReduceFriendFromCacheResp, error)
	// blackList
	GetBlackIDListFromCache(context.Context, *GetBlackIDListFromCacheReq) (*GetBlackIDListFromCacheResp, error)
	AddBlackUserToCache(context.Context, *AddBlackUserToCacheReq) (*AddBlackUserToCacheResp, error)
	ReduceBlackUserFromCache(context.Context, *ReduceBlackUserFromCacheReq) (*ReduceBlackUserFromCacheResp, error)
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_GetUserInfoFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetUserInfoFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetUserInfoFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetUserInfoFromCache(ctx, req.(*GetUserInfoFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_UpdateUserInfoToCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfoToCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).UpdateUserInfoToCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/UpdateUserInfoToCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).UpdateUserInfoToCache(ctx, req.(*UpdateUserInfoToCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_GetFriendIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFriendIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetFriendIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetFriendIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetFriendIDListFromCache(ctx, req.(*GetFriendIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_AddFriendToCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFriendToCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).AddFriendToCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/AddFriendToCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).AddFriendToCache(ctx, req.(*AddFriendToCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_ReduceFriendFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReduceFriendFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).ReduceFriendFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/ReduceFriendFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).ReduceFriendFromCache(ctx, req.(*ReduceFriendFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_GetBlackIDListFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlackIDListFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).GetBlackIDListFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/GetBlackIDListFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).GetBlackIDListFromCache(ctx, req.(*GetBlackIDListFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_AddBlackUserToCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlackUserToCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).AddBlackUserToCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/AddBlackUserToCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).AddBlackUserToCache(ctx, req.(*AddBlackUserToCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cache_ReduceBlackUserFromCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReduceBlackUserFromCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).ReduceBlackUserFromCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cache.cache/ReduceBlackUserFromCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).ReduceBlackUserFromCache(ctx, req.(*ReduceBlackUserFromCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cache.cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfoFromCache",
			Handler:    _Cache_GetUserInfoFromCache_Handler,
		},
		{
			MethodName: "UpdateUserInfoToCache",
			Handler:    _Cache_UpdateUserInfoToCache_Handler,
		},
		{
			MethodName: "GetFriendIDListFromCache",
			Handler:    _Cache_GetFriendIDListFromCache_Handler,
		},
		{
			MethodName: "AddFriendToCache",
			Handler:    _Cache_AddFriendToCache_Handler,
		},
		{
			MethodName: "ReduceFriendFromCache",
			Handler:    _Cache_ReduceFriendFromCache_Handler,
		},
		{
			MethodName: "GetBlackIDListFromCache",
			Handler:    _Cache_GetBlackIDListFromCache_Handler,
		},
		{
			MethodName: "AddBlackUserToCache",
			Handler:    _Cache_AddBlackUserToCache_Handler,
		},
		{
			MethodName: "ReduceBlackUserFromCache",
			Handler:    _Cache_ReduceBlackUserFromCache_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cache/cache.proto",
}

func init() { proto.RegisterFile("cache/cache.proto", fileDescriptor_cache_d0822f7e413e82c3) }

var fileDescriptor_cache_d0822f7e413e82c3 = []byte{
	// 619 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdf, 0x6e, 0xd3, 0x3e,
	0x14, 0x56, 0x5a, 0xb5, 0xbf, 0x5f, 0x4f, 0x41, 0x30, 0x33, 0xba, 0xcc, 0x1d, 0x25, 0x0b, 0x37,
	0xbd, 0x6a, 0x45, 0xb9, 0x44, 0x02, 0x6d, 0x9d, 0x56, 0x55, 0x6c, 0x43, 0x44, 0x1b, 0x93, 0xc6,
	0x45, 0xc9, 0x12, 0x6f, 0x54, 0xa5, 0xb5, 0x67, 0xa7, 0x4c, 0x5c, 0xf0, 0x0a, 0xbc, 0x26, 0xaf,
	0x81, 0x6a, 0xa7, 0xe9, 0x9f, 0xd9, 0x6d, 0xc8, 0xe0, 0x26, 0x92, 0xed, 0x93, 0xef, 0x9c, 0xef,
	0x7c, 0xe7, 0x1c, 0x1b, 0x36, 0x02, 0x3f, 0xf8, 0x42, 0x9a, 0xf2, 0xdb, 0x60, 0x9c, 0x46, 0x14,
	0x15, 0xe4, 0x02, 0xef, 0xbe, 0x67, 0x64, 0xd4, 0xeb, 0x1e, 0x37, 0xd9, 0xe0, 0xba, 0x29, 0x4f,
	0x9a, 0x22, 0x1c, 0xf4, 0x6e, 0x45, 0xf3, 0x56, 0x28, 0x4b, 0xf7, 0x0d, 0x40, 0x9b, 0x0e, 0x87,
	0x74, 0xe4, 0x11, 0xc1, 0x90, 0x0d, 0xff, 0x11, 0xce, 0xdb, 0x34, 0x24, 0xb6, 0xe5, 0x58, 0xf5,
	0x82, 0x37, 0x5d, 0xa2, 0x0a, 0x14, 0x09, 0xe7, 0xc7, 0xe2, 0xda, 0xce, 0x39, 0x56, 0xbd, 0xe4,
	0xc5, 0x2b, 0xf7, 0x13, 0x6c, 0x75, 0x48, 0x74, 0x26, 0x08, 0xef, 0x8e, 0xae, 0xe8, 0x21, 0xa7,
	0xc3, 0xf6, 0xc4, 0xb5, 0x47, 0x6e, 0x50, 0x0d, 0x60, 0x3c, 0xd9, 0x3f, 0x38, 0xea, 0x8b, 0xc8,
	0xb6, 0x9c, 0x7c, 0xbd, 0xe4, 0xcd, 0xed, 0x20, 0x07, 0xca, 0x94, 0x11, 0xee, 0x47, 0x7d, 0x3a,
	0xea, 0x1e, 0xc4, 0xb8, 0xf3, 0x5b, 0xee, 0x4f, 0x0b, 0x6c, 0x3d, 0xba, 0x60, 0xe8, 0x25, 0x40,
	0x90, 0x44, 0x2e, 0xc3, 0x2d, 0xb7, 0x36, 0x1a, 0x2a, 0x0b, 0x33, 0x4a, 0xde, 0x9c, 0x11, 0x7a,
	0x0b, 0x0f, 0xc6, 0x31, 0x96, 0x8c, 0x29, 0xe7, 0xe4, 0xeb, 0xe5, 0x56, 0xb5, 0x21, 0x08, 0xff,
	0x46, 0x78, 0xcf, 0x67, 0xfd, 0x1e, 0xf3, 0xb9, 0x3f, 0x14, 0x8d, 0xa9, 0x4b, 0x6f, 0xe1, 0x07,
	0xf7, 0x07, 0xd8, 0x67, 0x2c, 0xf4, 0x23, 0x32, 0x3d, 0x3f, 0xa5, 0x09, 0xdd, 0x65, 0x70, 0xeb,
	0x0f, 0xc1, 0x53, 0xe4, 0xe3, 0x04, 0xb6, 0x0d, 0xee, 0x33, 0xe5, 0xc3, 0x3d, 0x87, 0x6a, 0x87,
	0x44, 0x87, 0xbc, 0x4f, 0x46, 0xa1, 0x12, 0x65, 0x41, 0xc0, 0x0a, 0x14, 0x95, 0x5c, 0x12, 0xad,
	0xe4, 0xc5, 0xab, 0x14, 0x81, 0xde, 0xc0, 0x8e, 0x19, 0x58, 0xb0, 0xb5, 0xa5, 0xb1, 0xc8, 0x25,
	0x97, 0x86, 0xcb, 0x00, 0x9e, 0xec, 0x85, 0xa1, 0x72, 0x39, 0xa7, 0x8a, 0x89, 0x03, 0x86, 0xff,
	0xaf, 0xe2, 0xf0, 0x62, 0x02, 0xc9, 0x7a, 0x99, 0x5f, 0xfe, 0x2e, 0xbf, 0x2e, 0x6c, 0xde, 0x75,
	0x96, 0x4d, 0x03, 0x06, 0xb6, 0x47, 0xc2, 0x71, 0x40, 0x14, 0x5a, 0x2a, 0x01, 0xee, 0x17, 0xfc,
	0x09, 0x6c, 0x1b, 0x3c, 0x66, 0x63, 0xf0, 0x11, 0x70, 0x87, 0x44, 0xfb, 0x5f, 0xfd, 0x60, 0xf0,
	0x57, 0x8b, 0x88, 0xc9, 0xea, 0xd4, 0xe3, 0xfe, 0x9b, 0x1a, 0x8a, 0xa0, 0xb2, 0x17, 0x86, 0xd2,
	0xe3, 0xa4, 0xc3, 0x52, 0x94, 0x91, 0x03, 0xe5, 0xcb, 0xa9, 0xf9, 0x8c, 0xc5, 0xdc, 0x56, 0x0a,
	0x3d, 0x8e, 0x60, 0x4b, 0xeb, 0x35, 0x9b, 0x1a, 0xdf, 0xa1, 0xaa, 0xd4, 0x4d, 0x00, 0xd3, 0xca,
	0x71, 0x6f, 0x22, 0x1f, 0x60, 0xc7, 0xec, 0x3a, 0x13, 0x9b, 0xd6, 0xaf, 0x02, 0xa8, 0xbb, 0x0c,
	0x9d, 0xc3, 0xa6, 0xee, 0x2a, 0x40, 0xb5, 0x18, 0xc0, 0x70, 0x0b, 0xe1, 0xe7, 0x2b, 0xcf, 0x05,
	0x43, 0x17, 0xf0, 0x54, 0x3b, 0x54, 0xd1, 0xf4, 0x4f, 0xd3, 0xc4, 0xc7, 0xce, 0x6a, 0x03, 0xc1,
	0x50, 0x20, 0xef, 0x2f, 0xed, 0x1c, 0x44, 0xee, 0x2c, 0x30, 0xd3, 0x04, 0xc6, 0x2f, 0xd6, 0xda,
	0x08, 0x86, 0xde, 0xc1, 0xe3, 0xe5, 0x61, 0x84, 0x70, 0xfc, 0xa3, 0x66, 0x24, 0xe2, 0xaa, 0xf1,
	0x4c, 0x65, 0x43, 0x3b, 0x1c, 0x92, 0x6c, 0x98, 0x86, 0x55, 0x92, 0x0d, 0xf3, 0x6c, 0xf9, 0x2c,
	0xdf, 0x0a, 0xba, 0x86, 0x46, 0xbb, 0x33, 0xa2, 0x86, 0x41, 0x82, 0xdd, 0x75, 0x26, 0x82, 0xa1,
	0x53, 0x79, 0x09, 0x2c, 0xb7, 0x12, 0x7a, 0x36, 0x63, 0xac, 0x69, 0x6e, 0x5c, 0x5b, 0x75, 0xac,
	0x54, 0x34, 0xd5, 0x75, 0xa2, 0xe2, 0x8a, 0x9e, 0x4b, 0x54, 0x5c, 0xd5, 0x1c, 0xfb, 0x8f, 0x2e,
	0x1e, 0x36, 0xd4, 0x1b, 0xee, 0xb5, 0xfc, 0x5e, 0x16, 0xe5, 0x03, 0xed, 0xd5, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x08, 0x5c, 0x1d, 0xa2, 0xdf, 0x09, 0x00, 0x00,
}
